{"mode":"editor","version":1,"windowDimensions":{"x":0,"y":66,"width":1366,"height":702,"maximized":true},"grammars":{"deserializer":"GrammarRegistry","grammarOverridesByPath":{}},"project":{"paths":["atom://.atom/stylesheet","/home/victor/Documents/Elektro/Inbyggda system/c_programmering","/home/victor/Documents/Elektro/Inbyggda system/c_programmering/modul3/uppg1/modul3_uppg1"],"buffers":[{"text":"/**===========================================================================\nName:           main.c\nAuthor:         Victor Vikstr√∂m\nCompile with:   Code::Blocks 13.12 / GCC\nDate:           2015-12-07\nVersion:        2\nDescription:    This program will read float values given by the user\n                until a non-numeric input is detected. When a non-numeric\n                input is detected the program will print the array\n                forward and backwards as well as calculate the mean-value.\nNote version 2:\n===========================================================================**/\n#include <stdio.h>  //scanf, printf\n\n#define SIZE 10  //instead of sifeof(array)\n\n\n//Print an array in the forward direction by counting up\nvoid print_array_fwd(float array[])\n{\n    int i;\n    for(i = 0; i < SIZE; i++)\n        printf(\"%.2f \", array[i]);\n}\n\n\n//Print an array in the reverse direction by counting down\nvoid print_array_rev(float array[])\n{\n    int i;\n    for(i = SIZE - 1; i >= 0; i--)\n        printf(\"%.2f \", array[i]);\n}\n\n//Returns the mean value of all elements in an array\nfloat calc_mean(float array[], int true_size, int filled)\n{\n    int i;\n    float mean = 0;\n\n    if(filled)\n        true_size = SIZE;\n\n    for(i = 0; i < true_size; i++)\n        mean += array[i]; //sum all elements in the array\n    mean /= true_size; //Divide sum with number of elements\n    return mean;\n}\n\nvoid shift_values_right(float array[])\n{\n    int i;\n\n    for(i = 0; i < SIZE - 1; i++)\n        array[i] = array[i + 1];\n}\n\n/*****************************************************\n              End of function declarations\n******************************************************/\nint main(void)\n{\n    int i = 0;  //Index\n    int filled_once = 0;\n    float input_buffer = 0;\n    float input_array[SIZE]; //No need to init as zero\n\n/*  I choose to run this in the main function beacuse\n    it performs two tasks; read input and fault check.\n    It is therefore the main control-loop of the program.\n    This works by checking the return value of scanf.\n    The value will be the number of items successfully\n    matched as numeric, one for each read-cycle.       */\n    while(scanf(\"%f\", &input_buffer) == 1)\n    {\n        if(i == SIZE -1) //Reset counters\n        {\n            i = 0;\n            if(!filled_once)\n                filled_once = 1; //The array has been filled\n        }\n\n        else if(filled_once) //Shift current values in array to the left\n        {\n            shift_values_right(input_array);\n            input_array[SIZE -1] = input_buffer; //Place new value in the last position\n\n        }\n\n        else\n        {\n            input_array[i] = input_buffer;\n            i++;\n        }\n\n    }\n    //If the loop is broken an error has been detected\n    printf(\"%s\\n\", \"Input error detected\");\n    printf(\"%s\", \"Forward: \");\n    print_array_fwd(input_array);\n    printf(\"\\n%s\", \"Reverse: \");\n    print_array_rev(input_array);\n    printf(\"\\n%s\", \"Mean value: \");\n    printf(\"%.2f\",calc_mean(input_array, i, filled_once)); //Pass array and current position\n\n    return 0;\n}\n","markerStore":{"nextMarkerId":11,"markersById":{"0":{"range":{"start":{"row":16,"column":0},"end":{"row":16,"column":0}},"properties":{"type":"selection","editorId":174,"goalScreenRange":null,"autoscroll":false,"preserveFolds":true},"reversed":true,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}},"version":2},"history":{"version":3,"nextCheckpointId":29,"undoStack":[{"type":"group-start","snapshot":{"0":{"range":[[62,23],[62,23]],"properties":{"type":"selection","editorId":174,"goalScreenRange":null,"autoscroll":false},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"change","content":{"oldRange":[[62,23],[62,23]],"newRange":[[62,23],[62,24]],"oldText":"","newText":"s"}},{"type":"group-end","snapshot":{"0":{"range":[[62,24],[62,24]],"properties":{"type":"selection","editorId":174,"goalScreenRange":null,"autoscroll":false},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"group-start","snapshot":{"0":{"range":[[62,24],[62,24]],"properties":{"type":"selection","editorId":174,"goalScreenRange":null,"autoscroll":false},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"change","content":{"oldRange":[[62,23],[62,24]],"newRange":[[62,23],[62,23]],"oldText":"s","newText":""}},{"type":"group-end","snapshot":{"0":{"range":[[62,23],[62,23]],"properties":{"type":"selection","editorId":174,"goalScreenRange":null,"autoscroll":false},"reversed":true,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"group-start","snapshot":{"0":{"range":[[62,23],[62,23]],"properties":{"type":"selection","editorId":174,"goalScreenRange":null,"autoscroll":false,"preserveFolds":true},"reversed":true,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"change","content":{"oldRange":[[62,23],[62,23]],"newRange":[[62,23],[62,24]],"oldText":"","newText":"s"}},{"type":"group-end","snapshot":{"0":{"range":[[62,24],[62,24]],"properties":{"type":"selection","editorId":174,"goalScreenRange":null,"autoscroll":false,"preserveFolds":true},"reversed":true,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"group-start","snapshot":{"0":{"range":[[62,24],[62,24]],"properties":{"type":"selection","editorId":174,"goalScreenRange":null,"autoscroll":false,"preserveFolds":true},"reversed":true,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"change","content":{"oldRange":[[62,23],[62,24]],"newRange":[[62,23],[62,23]],"oldText":"s","newText":""}},{"type":"group-end","snapshot":{"0":{"range":[[62,23],[62,23]],"properties":{"type":"selection","editorId":174,"goalScreenRange":null,"autoscroll":false,"preserveFolds":true},"reversed":true,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"group-start","snapshot":{"0":{"range":[[41,25],[41,25]],"properties":{"type":"selection","editorId":174,"goalScreenRange":null,"autoscroll":false,"preserveFolds":true},"reversed":true,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"change","content":{"oldRange":[[41,25],[41,25]],"newRange":[[41,25],[41,26]],"oldText":"","newText":"a"}},{"type":"change","content":{"oldRange":[[41,26],[41,26]],"newRange":[[41,26],[41,27]],"oldText":"","newText":"t"}},{"type":"group-end","snapshot":{"0":{"range":[[41,27],[41,27]],"properties":{"type":"selection","editorId":174,"goalScreenRange":null,"autoscroll":false,"preserveFolds":true},"reversed":true,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"group-start","snapshot":{"0":{"range":[[41,27],[41,27]],"properties":{"type":"selection","editorId":174,"goalScreenRange":null,"autoscroll":false,"preserveFolds":true},"reversed":true,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"change","content":{"oldRange":[[41,26],[41,27]],"newRange":[[41,26],[41,26]],"oldText":"t","newText":""}},{"type":"group-end","snapshot":{"0":{"range":[[41,26],[41,26]],"properties":{"type":"selection","editorId":174,"goalScreenRange":null,"autoscroll":false,"preserveFolds":true},"reversed":true,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"group-start","snapshot":{"0":{"range":[[41,26],[41,26]],"properties":{"type":"selection","editorId":174,"goalScreenRange":null,"autoscroll":false,"preserveFolds":true},"reversed":true,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"change","content":{"oldRange":[[41,25],[41,26]],"newRange":[[41,25],[41,25]],"oldText":"a","newText":""}},{"type":"group-end","snapshot":{"0":{"range":[[41,25],[41,25]],"properties":{"type":"selection","editorId":174,"goalScreenRange":null,"autoscroll":false,"preserveFolds":true},"reversed":true,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}}],"redoStack":[]},"encoding":"utf8","filePath":"/home/victor/Documents/Elektro/Inbyggda system/c_programmering/modul3/uppg1/modul3_uppg1/main.c","digestWhenLastPersisted":"70f84e94494de184ce56df95e3574b630997a5cb","preferredLineEnding":null,"deserializer":"TextBuffer","version":2}],"deserializer":"Project"},"workspace":{"paneContainer":{"root":{"id":3,"items":[{"deserializer":"SettingsView","version":2,"activePanelName":"atomatigit","uri":"atom://config/packages"},{"id":174,"softTabs":true,"displayBuffer":{"id":175,"softWrapped":true,"scrollTop":3,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/home/victor/Documents/Elektro/Inbyggda system/c_programmering/modul3/uppg1/modul3_uppg1/main.c","largeFileMode":false,"deserializer":"TokenizedBuffer"},"largeFileMode":false,"deserializer":"DisplayBuffer"},"deserializer":"TextEditor"}],"activeItemURI":"/home/victor/Documents/Elektro/Inbyggda system/c_programmering/modul3/uppg1/modul3_uppg1/main.c","focused":true,"flexScale":1,"deserializer":"Pane"},"activePaneId":3,"deserializer":"PaneContainer","version":1},"fullScreen":false,"packagesWithActiveGrammars":["language-c","language-hyperlink","language-todo"],"deserializer":"Workspace"},"packageStates":{"fuzzy-finder":{"/home/victor/Documents/Elektro/Inbyggda system/c_programmering/modul3/uppg1/modul3_uppg1/main.c":1450134087152},"metrics":{"sessionLength":813738},"tabs":[{}],"tree-view":{"directoryExpansionStates":{"atom://.atom/stylesheet":{"isExpanded":true,"entries":{}},"/home/victor/Documents/Elektro/Inbyggda system/c_programmering":{"isExpanded":false,"entries":{}},"/home/victor/Documents/Elektro/Inbyggda system/c_programmering/modul3/uppg1/modul3_uppg1":{"isExpanded":true,"entries":{".git":{"isExpanded":false,"entries":{}},"bin":{"isExpanded":false,"entries":{}},"obj":{"isExpanded":false,"entries":{}}}}},"selectedPath":"/home/victor/Documents/Elektro/Inbyggda system/c_programmering/modul3/uppg1/modul3_uppg1","hasFocus":false,"attached":true,"scrollLeft":0,"scrollTop":0,"width":200},"linter":{"scope":"File"},"keybinding-resolver":{}}}